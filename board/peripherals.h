/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_pint.h"
#include "fsl_i2c.h"
#include "fsl_ctimer.h"
#include "fsl_clock.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals_cm33_core0 functional group */
/* BOARD_InitPeripherals_cm33_core0 defines for PINT */
/* Definition of peripheral ID */
#define PINT_PERIPHERAL ((PINT_Type *) PINT_BASE)
/* PINT interrupt vector ID (number). */
#define PINT_PINT_0_IRQN PIN_INT0_IRQn
/* PINT interrupt vector priority. */
#define PINT_PINT_0_IRQ_PRIORITY 0
/* PINT interrupt vector ID (number). */
#define PINT_PINT_1_IRQN PIN_INT1_IRQn
/* PINT interrupt vector priority. */
#define PINT_PINT_1_IRQ_PRIORITY 0
/* Definition of PINT interrupt ID for interrupt 0  */
#define PINT_INT_0 kPINT_PinInt0
/* Definition of PINT interrupt ID for interrupt 1  */
#define PINT_INT_1 kPINT_PinInt1
/* BOARD_InitPeripherals_cm33_core0 defines for FLEXCOMM1 */
/* Definition of peripheral ID */
#define FLEXCOMM1_PERIPHERAL ((I2C_Type *)FLEXCOMM1)
/* Definition of the clock source frequency */
#define FLEXCOMM1_CLOCK_SOURCE 12000000UL
/* Definition of peripheral ID */
#define CTIMER2_PERIPHERAL CTIMER2
/* Timer tick frequency in Hz (input frequency of the timer) */
#define CTIMER2_TICK_FREQ 5000UL
/* Timer tick period in ns (input period of the timer) */
#define CTIMER2_TICK_PERIOD 200000UL
/* Definition of PWM period channel. */
#define CTIMER2_PWM_PERIOD_CH kCTIMER_Match_3
/* Definition of PWM period */
#define CTIMER2_PWM_PERIOD 99
/* Definition of channel 1 ID */
#define CTIMER2_PWM_1_CHANNEL kCTIMER_Match_1
/* Definition of channel 1 duty */
#define CTIMER2_PWM_1_DUTY 100
/* Definition of channel 2 ID */
#define CTIMER2_PWM_2_CHANNEL kCTIMER_Match_2
/* Definition of channel 2 duty */
#define CTIMER2_PWM_2_DUTY 100

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const i2c_master_config_t FLEXCOMM1_config;
extern const ctimer_config_t CTIMER2_config;

/***********************************************************************************************************************
 * Callback functions
 **********************************************************************************************************************/
/* INT_0 callback function for the PINT component */
extern void CB_ENC_CLK(pint_pin_int_t pintr, uint32_t pmatch_status);
/* INT_1 callback function for the PINT component */
extern void CB_ENC_SW(pint_pin_int_t pintr, uint32_t pmatch_status);

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals_cm33_core0(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
